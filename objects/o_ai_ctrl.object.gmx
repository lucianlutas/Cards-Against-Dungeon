<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_slot</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize AI

global.ai_card = noone;

yy = y;
xx = x;
x = room_width + 100;
y = -50;

// create deck
image_speed = 0;
deck = ds_list_create();

// add cards to deck
switch(global.location){
    case "Forest Cave":
        ds_list_add(deck, s_rock_atk_str_1);
        ds_list_add(deck, s_mace_atk_str_2);
        ds_list_add(deck, s_mace_atk_str_2);
        ds_list_add(deck, s_sword_atk_str_3);
        ds_list_add(deck, s_woodshield_def_str_1);
        ds_list_add(deck, s_woodshield_def_str_1);
        ds_list_add(deck, s_fireslash_atk_fire_2);
        ds_list_add(deck, s_fireslash_atk_fire_2);
        ds_list_add(deck, s_watersplash_atk_water_1);
        ds_list_add(deck, s_fireskini_def_fire_2);
        ds_list_add(deck, s_lightbolti_atk_light_2);
        ds_list_add(deck, s_waterwhip_atk_water_3);
        break;
    case "City Ruins":
        ds_list_add(deck, s_mace_atk_str_2);
        ds_list_add(deck, s_ironmace_atk_str_4);
        ds_list_add(deck, s_mace_atk_str_2);
        ds_list_add(deck, s_sword_atk_str_3);
        ds_list_add(deck, s_sword_atk_str_3);
        ds_list_add(deck, s_hailstorm_atk_ice_3);
        ds_list_add(deck, s_fireskini_def_fire_2);
        ds_list_add(deck, s_lightboltii_atk_light_4);
        ds_list_add(deck, s_storm_atk_light_3);
        ds_list_add(deck, s_watersplash_atk_water_1);
        ds_list_add(deck, s_waterwhip_atk_water_3);
        ds_list_add(deck, s_ironmace_atk_str_4);
        break;
    case "Mordekai's Chambers":
        ds_list_add(deck, s_mace_atk_str_2);
        ds_list_add(deck, s_ironmace_atk_str_4);
        ds_list_add(deck, s_mace_atk_str_2);
        ds_list_add(deck, s_ironmace_atk_str_4);
        ds_list_add(deck, s_sword_atk_str_3);
        ds_list_add(deck, s_ironshield_def_str_3);
        ds_list_add(deck, s_ironshield_def_str_3);
        ds_list_add(deck, s_storm_atk_light_3);
        ds_list_add(deck, s_fireskinii_def_fire_4);
        ds_list_add(deck, s_wildflames_atk_fire_3);
        ds_list_add(deck, s_sword_atk_str_3);
        ds_list_add(deck, s_woodshield_def_str_1);
        break;
    case "Church of Aquatics":
        ds_list_add(deck, s_waterbubble_def_water_7);
        ds_list_add(deck, s_waterpillar_atk_water_4);
        ds_list_add(deck, s_waterpillar_atk_water_4);
        ds_list_add(deck, s_waterskin_def_water_4);
        ds_list_add(deck, s_waterskin_def_water_4);
        ds_list_add(deck, s_watersplash_atk_water_1);
        ds_list_add(deck, s_waterwhip_atk_water_3);
        ds_list_add(deck, s_waterwhirl_atk_water_6);
        ds_list_add(deck, s_sword_atk_str_3);
        ds_list_add(deck, s_sword_atk_str_3);
        ds_list_add(deck, s_ironmace_atk_str_4);
        ds_list_add(deck, s_ironmace_atk_str_4);
        break;
    case "Dungeon of Light":
        ds_list_add(deck, s_lightball_atk_light_7);
        ds_list_add(deck, s_lightbolti_atk_light_2);
        ds_list_add(deck, s_lightbolti_atk_light_2);
        ds_list_add(deck, s_lightboltii_atk_light_4);
        ds_list_add(deck, s_lightboltii_atk_light_4);
        ds_list_add(deck, s_smite_atk_light_5);
        ds_list_add(deck, s_storm_atk_light_3);
        ds_list_add(deck, s_storm_atk_light_3);
        ds_list_add(deck, s_ironshield_def_str_3);
        ds_list_add(deck, s_ironshield_def_str_3);
        ds_list_add(deck, s_mace_atk_str_2);
        ds_list_add(deck, s_mace_atk_str_2);
        break;
    case "Neversee":
        ds_list_add(deck, s_lightboltii_atk_light_4);
        ds_list_add(deck, s_smite_atk_light_5);
        ds_list_add(deck, s_smite_atk_light_5);
        ds_list_add(deck, s_storm_atk_light_3);
        ds_list_add(deck, s_waterbubble_def_water_7);
        ds_list_add(deck, s_waterpillar_atk_water_4);
        ds_list_add(deck, s_waterskin_def_water_4);
        ds_list_add(deck, s_waterskin_def_water_4);
        ds_list_add(deck, s_ironmace_atk_str_4);
        ds_list_add(deck, s_irondagger_atk_str_2);
        ds_list_add(deck, s_wildflames_atk_fire_3);
        ds_list_add(deck, s_wildflames_atk_fire_3);
        break;
    case "Ice Den":
        ds_list_add(deck, s_hailstorm_atk_ice_3);
        ds_list_add(deck, s_hailstorm_atk_ice_3);
        ds_list_add(deck, s_hailstorm_atk_ice_3);
        ds_list_add(deck, s_icecastle_def_ice_6);
        ds_list_add(deck, s_icecastle_def_ice_6);
        ds_list_add(deck, s_icecube_def_ice_4);
        ds_list_add(deck, s_icepillar_atk_ice_5);
        ds_list_add(deck, s_icepillar_atk_ice_5);
        ds_list_add(deck, s_iceshard_atk_ice_2);
        ds_list_add(deck, s_ironmace_atk_str_4);
        ds_list_add(deck, s_ironmace_atk_str_4);
        ds_list_add(deck, s_ironshield_def_str_3);
        break;
    case "The Arena":
        ds_list_add(deck, s_ironmace_atk_str_4);
        ds_list_add(deck, s_ironmace_atk_str_4);
        ds_list_add(deck, s_sword_atk_str_3);
        ds_list_add(deck, s_sword_atk_str_3);
        ds_list_add(deck, s_ironshield_def_str_3);
        ds_list_add(deck, s_ironshield_def_str_3);
        ds_list_add(deck, s_magicshield_def_str_6);
        ds_list_add(deck, s_magicshield_def_str_6);
        ds_list_add(deck, s_wildflames_atk_fire_3);
        ds_list_add(deck, s_lightboltii_atk_light_4);
        ds_list_add(deck, s_lightboltii_atk_light_4);
        ds_list_add(deck, s_waterpillar_atk_water_4);
        break;
    case "Fire Shrine":
        ds_list_add(deck, s_fireskini_def_fire_2);
        ds_list_add(deck, s_fireskinii_def_fire_4);
        ds_list_add(deck, s_fireskinii_def_fire_4);
        ds_list_add(deck, s_fireslash_atk_fire_2);
        ds_list_add(deck, s_fireswirl_atk_fire_5);
        ds_list_add(deck, s_fireswirl_atk_fire_5);
        ds_list_add(deck, s_fireyrock_atk_fire_6);
        ds_list_add(deck, s_wildflames_atk_fire_3);
        ds_list_add(deck, s_wildflames_atk_fire_3);
        ds_list_add(deck, s_magicshield_def_str_6);
        ds_list_add(deck, s_ironmace_atk_str_4);
        ds_list_add(deck, s_irondagger_atk_str_2);
        break;
    case "Hollow Point":
        ds_list_add(deck, s_magicshield_def_str_6);
        ds_list_add(deck, s_ironmace_atk_str_4);
        ds_list_add(deck, s_ironmace_atk_str_4);
        ds_list_add(deck, s_lightball_atk_light_7);
        ds_list_add(deck, s_fireyrock_atk_fire_6);
        ds_list_add(deck, s_fireyrock_atk_fire_6);
        ds_list_add(deck, s_waterwhirl_atk_water_6);
        ds_list_add(deck, s_waterbubble_def_water_7);
        ds_list_add(deck, s_icecastle_def_ice_6);
        ds_list_add(deck, s_mace_atk_str_2);
        ds_list_add(deck, s_fireskini_def_fire_2);
        ds_list_add(deck, s_icecube_def_ice_4);
        break;
}       
/*
ds_list_add(deck, s_rock_atk_str_1);
ds_list_add(deck, s_mace_atk_str_2);
ds_list_add(deck, s_ironmace_atk_str_4);
ds_list_add(deck, s_irondagger_atk_str_2);
ds_list_add(deck, s_sword_atk_str_3);
ds_list_add(deck, s_woodshield_def_str_1);
ds_list_add(deck, s_ironshield_def_str_3);
ds_list_add(deck, s_magicshield_def_str_6);
ds_list_add(deck, s_fireskini_def_fire_2);
ds_list_add(deck, s_fireskinii_def_fire_4);
ds_list_add(deck, s_fireslash_atk_fire_2);
ds_list_add(deck, s_fireswirl_atk_fire_5);
ds_list_add(deck, s_fireyrock_atk_fire_6);
ds_list_add(deck, s_wildflames_atk_fire_3);
ds_list_add(deck, s_hailstorm_atk_ice_3);
ds_list_add(deck, s_icecastle_def_ice_6);
ds_list_add(deck, s_icecube_def_ice_4);
ds_list_add(deck, s_icepillar_atk_ice_5);
ds_list_add(deck, s_iceshard_atk_ice_2);
ds_list_add(deck, s_lightball_atk_light_7);
ds_list_add(deck, s_lightbolti_atk_light_2);
ds_list_add(deck, s_lightboltii_atk_light_4);
ds_list_add(deck, s_smite_atk_light_5);
ds_list_add(deck, s_storm_atk_light_3);
ds_list_add(deck, s_waterbubble_def_water_7);
ds_list_add(deck, s_waterpillar_atk_water_4);
ds_list_add(deck, s_waterskin_def_water_4);
ds_list_add(deck, s_watersplash_atk_water_1);
ds_list_add(deck, s_waterwhip_atk_water_3);
ds_list_add(deck, s_waterwhirl_atk_water_6);
*/


// shuffle deck
for(i = 0; i&lt;irandom_range(2, 12); i++){
    ds_list_shuffle(deck);
}

/*
// leave only 12 cards in deck
if(ds_list_size(deck)&gt;12){
    while(ds_list_size(deck)&gt;12){
        ds_list_delete(deck, 0);
    }
} */

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
global.ai_card = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>o_ai_ctrl</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Display top card

if(ds_list_empty(deck) or global.wait2 = 0 or global.display_win == true){
    sprite_index = noone;
    x = room_width+100;
    y = -50;
}
else{
    sprite_index = ds_list_find_value(deck, 0);
    with(o_ai_ctrl){
        TweenSimpleMove(x ,y , 384, 112, 2.5, EaseInOutQuad);
    }
    //alarm[0] = room_speed/2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// destroy deck

ds_list_destroy(deck);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
