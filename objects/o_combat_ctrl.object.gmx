<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize vars

global.wait = 0;
global.wait2 = 0;

player_s = "";
player_t = "";
plater_str = 0;
player_hp = 15;
ai_s = "";
ai_t = "";
ai_str = 0;
ai_hp = 15;

global.display_win = false;
global.roundwin = 0;
global.win = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(room_width/2, room_height/2 - 75, o_btn_next);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// handle fade out [2]
with(o_ai_ctrl){
    TweenSimpleFade(1, 0, room_speed/2, EaseInOutCubic);
}
with(o_card_drop){
    TweenSimpleFade(1, 0, room_speed/2, EaseInOutCubic);
}
alarm[1] = room_speed/2;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// handle returning to initial values [3]
//return to initial pos
if(global.roundwin == 1){ // player wins
    with(o_card_drop){
        TweenSimpleScale(1.2, 1.2, 1, 1, 1, EaseInOutQuad);
    }
}
else if(global.roundwin == 2){ // ai wins
    with(o_ai_ctrl){
        TweenSimpleScale(1.2, 1.2, 1, 1, 1, EaseInOutQuad);
    }
}
else{

}
// return to initial opacity
with(o_ai_ctrl){
    TweenSimpleFade(0, 1, 1, EaseInOutCubic);
}
with(o_card_drop){
    TweenSimpleFade(0, 1, 1, EaseInOutCubic);
}
if(global.win != 0){
    a = instance_create(room_width/2, 112, o_victory);
    a.image_alpha = 0;
    with(a){
        if(global.win == 1){
            image_index = 0;
        }
        else if(global.win == 2){
            image_index = 1;
        }
        TweenSimpleFade(0, 1, room_speed/2, EaseInOutQuad);
        TweenSimpleScale(0, 0, 1, 1, room_speed, EaseInOutQuad);
    }

    global.display_win = true;
    alarm[3] = room_speed+15;
}
else{
    //o_drag_ctrl.get_data = false;
    global.wait2 = 0;
}
ds_list_delete(o_card_drop.deck, 0);
ds_list_delete(o_ai_ctrl.deck, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// card win animation [1]

if(global.roundwin == 1) { // player wins
    with(o_card_drop){
        TweenSimpleScale(1, 1, 1.2, 1.2, 20, EaseInOutQuad);
    }
}
else if(global.roundwin == 2){ // ai wins
    with(o_ai_ctrl){
        TweenSimpleScale(1, 1, 1.2, 1.2, 20, EaseInOutQuad);
    }
}
else{ // draw

}

alarm[2] = room_speed*2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Combat control

// add stats to cards
if(global.wait == 1){
    player_s = spr_to_stats_suit(ds_list_find_value(o_card_drop.deck, 0));
    player_t = spr_to_stats_type(ds_list_find_value(o_card_drop.deck, 0));
    player_str = spr_to_stats_str(ds_list_find_value(o_card_drop.deck, 0));
    ai_s = spr_to_stats_suit(o_ai_ctrl.sprite_index);
    ai_t = spr_to_stats_type(o_ai_ctrl.sprite_index);
    ai_str = spr_to_stats_str(o_ai_ctrl.sprite_index);
    
    if(o_btn_skip.pressed = true){
        player_t = "skip";
    }
    
//}
show_debug_message(string(player_str) + " " + string(ai_str) + " | " + string(player_t) + " " + string(ai_t));

// actual combat
//if(global.wait == 1){
    if(player_t == "atk" and ai_t == "atk"){ // ATK ATK
        if(player_s == ai_s){
            if(player_str &gt; ai_str){
                ai_hp -= player_str;
                global.roundwin = 1; // player = 1 ; ai = 2
            }
            else if(player_str &lt; ai_str){
                player_hp -= ai_str;
                global.roundwin = 2; // player = 1 ; ai = 2
            }
            else{
                // when equal do nothing
                global.roundwin = 0; // player = 1 ; ai = 2
            }
        }
        else{
            if(player_s == "fire" and ai_s == "ice"){
                ai_hp -= player_str;
                global.roundwin = 1; // player = 1 ; ai = 2
            }
            else if(player_s == "ice" and ai_s == "fire"){
                player_hp -= ai_str;
                global.roundwin = 2; // player = 1 ; ai = 2
            }
            else if(player_s == "fire" and ai_s == "water"){
                player_hp -= ai_str;
                global.roundwin = 2; // player = 1 ; ai = 2
            }
            else if(player_s == "water" and ai_s == "fire"){
                ai_hp -= player_str;
                global.roundwin = 1; // player = 1 ; ai = 2
            }
            else if(player_s == "water" and ai_s == "light"){
                player_hp -= ai_str;
                global.roundwin = 2; // player = 1 ; ai = 2
            }
            else if(player_s == "light" and ai_s == "water"){
                ai_hp -= player_str;
                global.roundwin = 1; // player = 1 ; ai = 2
            }
            else if(player_s == "light" and ai_s == "ice"){
                ai_hp -= player_str;
                global.roundwin = 1; // player = 1 ; ai = 2
            }
            else if(player_s == "ice" and ai_s == "light"){
                player_hp -= ai_str;
                global.roundwin = 2; // player = 1 ; ai = 2
            }
            else if(player_s == "light" and ai_s == "fire"){
                ai_hp -= player_str;
                global.roundwin = 1; // player = 1 ; ai = 2
            }
            else if(player_s == "fire" and ai_s == "light"){
                player_hp -= ai_str;
                global.roundwin = 2; // player = 1 ; ai = 2
            }
            else if(player_s == "water" and ai_s == "ice"){
                player_hp -= ai_str;
                global.roundwin = 2; // player = 1 ; ai = 2
            }
            else if(player_s == "ice" and ai_s == "water"){
                ai_hp -= player_str;
                global.roundwin = 1; // player = 1 ; ai = 2
            }
            else if(player_s == "str"){
                player_hp -= ai_str;
                global.roundwin = 2; // player = 1 ; ai = 2
            }
            else if(ai_s == "str"){
                ai_hp -= player_str;
                global.roundwin = 1; // player = 1 ; ai = 2
            }
        }
    }
    else if(player_t == "atk" and ai_t == "def"){ // ATK DEF
        if(ai_s == "str"){
            if(player_str &gt; ai_str){
                ai_hp -= player_str;
                global.roundwin = 1; // player = 1 ; ai = 2
            }
            else{
                global.roundwin = 2; // player = 1 ; ai = 2
            }
        }
        if(player_s == "str"){ // STRENGTH
            if(ai_s == "str"){
                if(player_str &gt; ai_str){
                    ai_hp -= player_str - ai_str;
                    global.roundwin = 1; // player = 1 ; ai = 2
                }
                else{
                    global.roundwin = 2; // player = 1 ; ai = 2
                }
            }
            else{
                if(ai_str &lt; 5){
                    ai_hp -= player_str;
                    global.roundwin = 1; // player = 1 ; ai = 2
                }
                else{
                    global.roundwin = 2; // player = 1 ; ai = 2
                }
            }
        }
        else if(player_s == "water"){ // WATER
            if( ai_s == "ice" ){
                //nothing
                global.roundwin = 2; // player = 1 ; ai = 2
            }  
            else if(ai_s == "light" ){
                player_hp -= round(player_str/2);
                global.roundwin = 2; // player = 1 ; ai = 2
            }
            else if(ai_s  == "fire"){
                if(player_str &gt; ai_str){
                    ai_hp -= player_str - ai_str;
                    global.roundwin = 1; // player = 1 ; ai = 2
                }
                else{
                    global.roundwin = 2; // player = 1 ; ai = 2
                }
            }
            else if(ai_s == "water"){
                if(player_str &gt; ai_str){
                    ai_hp -= player_str - ai_str;
                    global.roundwin = 1; // player = 1 ; ai = 2
                }
                else{
                    global.roundwin = 2; // player = 1 ; ai = 2
                }
            }
        }
        else if(player_s == "fire"){ // FIRE
            if(ai_s == "ice"){
                if(player_str &gt; ai_str){
                    ai_hp -= player_str - ai_str;
                    global.roundwin = 1; // player = 1 ; ai = 2
                }
                else{
                    global.roundwin = 2; // player = 1 ; ai = 2
                }
            }
            else if(ai_s == "water"){
                // nothing
                global.roundwin = 2; // player = 1 ; ai = 2
            }
            else if(ai_s == "light"){
                /*if(player_str &gt; ai_str){
                    ai_hp -= player_str - ai_str;
                    global.roundwin = 1; // player = 1 ; ai = 2
                }
                else{*/
                global.roundwin = 2; // player = 1 ; ai = 2
            }
            else if(ai_s == "fire"){
                if(player_str &gt; ai_str){
                    ai_hp -= player_str - ai_str;
                    global.roundwin = 1; // player = 1 ; ai = 2
                }
                else{
                    global.roundwin = 2; // player = 1 ; ai = 2
                }
            }
        }
        else if(player_s == "light"){ // LIGHT
            if(ai_s == "ice"){
                ai_hp -= player_str;
                global.roundwin = 1; // player = 1 ; ai = 2
            }
            else if(ai_s == "water"){
                ai_hp -= player_str;
                global.roundwin = 1; // player = 1 ; ai = 2
            }
            else if(ai_s == "light"){
                if(player_str &gt; ai_str){
                    ai_hp -= player_str - ai_str;
                    global.roundwin = 1; // player = 1 ; ai = 2
                }
                else{
                    global.roundwin = 2; // player = 1 ; ai = 2
                }
            }
            else if(ai_s == "fire"){
                //if(player_str &gt; ai_str){
                ai_hp -= player_str;
                   /* global.roundwin = 1; // player = 1 ; ai = 2
                }
                else{*/
                global.roundwin = 2; // player = 1 ; ai = 2
            }
        }
        else if(player_s == "ice"){ // ICE
            if(ai_s == "ice"){
                if(player_str &gt; ai_str){
                    ai_hp -= player_str - ai_str;
                    global.roundwin = 1; // player = 1 ; ai = 2
                }
                else{
                    global.roundwin = 2; // player = 1 ; ai = 2
                }
            }
            else if(ai_s == "water"){
                if(player_str &gt; ai_str){
                    ai_hp -= player_str - ai_str;
                    global.roundwin = 1; // player = 1 ; ai = 2
                }
                else{
                    global.roundwin = 2; // player = 1 ; ai = 2
                }
            }
            else if(ai_s == "light"){
                // nothing
                global.roundwin = 2; // player = 1 ; ai = 2
            }
            else if(ai_s == "fire"){
                // nothing
                global.roundwin = 2; // player = 1 ; ai = 2
            }
        }
    }
    else if(player_t == "def" and ai_t == "atk"){ // DEF ATK
        if(player_s == "str"){
            if(ai_str &gt; player_str){
                player_hp -= ai_str - player_str;
                global.roundwin = 2; // player = 1 ; ai = 2
            }
            else{
                global.roundwin = 1; // player = 1 ; ai = 2
            }
        }   
    
        if(ai_s == "str"){ // STRENGTH
            if(player_s == "str"){
                if(ai_str &gt; player_str){
                    player_hp -= ai_str;
                    global.roundwin = 2; // player = 1 ; ai = 2
                }
                else{
                    global.roundwin = 1; // player = 1 ; ai = 2
                }
            }
            else{
                if(player_str &lt; 5){
                    player_hp -= ai_str;
                    global.roundwin = 2; // player = 1 ; ai = 2
                }
                else{
                    global.roundwin = 1; // player = 1 ; ai = 2
                }
            }
        }
        else if(ai_s == "water"){ // WATER
            if( player_s == "ice" ){
                global.roundwin = 1; // player = 1 ; ai = 2
            }  
            else if(player_s == "light" ){
                ai_hp -= ai_str/2;
                global.roundwin = 1; // player = 1 ; ai = 2
            }
            else if(player_s  == "fire"){
                if(ai_str &gt; player_str){
                    player_hp -= ai_str - player_str;
                    global.roundwin = 2; // player = 1 ; ai = 2
                }
                else{
                    global.roundwin = 2; // player = 1 ; ai = 2
                }
            }
            else if(player_s == "water"){
                if(ai_str &gt; player_str){
                    player_hp -= ai_str - player_str;
                    global.roundwin = 2; // player = 1 ; ai = 2
                }
                else{
                    global.roundwin = 1; // player = 1 ; ai = 2
                }
            }
        }
        else if(ai_s == "fire"){ // FIRE
            if(player_s == "ice"){
                if(ai_str &gt; player_str){
                    player_hp -= ai_str - player_str;
                    global.roundwin = 2; // player = 1 ; ai = 2
                }
                else{
                    global.roundwin = 2; // player = 1 ; ai = 2
                }
            }
            else if(player_s == "water"){
                // nothing
                global.roundwin = 1; // player = 1 ; ai = 2
            }
            else if(player_s == "light"){
                global.roundwin = 1; // player = 1 ; ai = 2
            }
            else if(player_s == "fire"){
                if(ai_str &gt; player_str){
                    player_hp -= ai_str - player_str;
                    global.roundwin = 2; // player = 1 ; ai = 2
                }
                else{
                    global.roundwin = 1; // player = 1 ; ai = 2
                }
            }
        }
        else if(ai_s == "light"){ // LIGHT
            if(player_s == "ice"){
                player_hp -= ai_str;
                global.roundwin = 2; // player = 1 ; ai = 2
            }
            else if(player_s == "water"){
                player_hp -= ai_str;
                global.roundwin = 2; // player = 1 ; ai = 2
            }
            else if(player_s == "light"){
                if(ai_str &gt; player_str){
                    player_hp -= ai_str - player_str;
                    global.roundwin = 2; // player = 1 ; ai = 2
                }
                else{
                    global.roundwin = 1; // player = 1 ; ai = 2
                }
            }
            else if(player_s == "fire"){
                player_hp -= ai_str;
                global.roundwin = 2; // player = 1 ; ai = 2
            }
        }
        else if(ai_s == "ice"){ // ICE
            if(player_s == "ice"){
                if(ai_str &gt; player_str){
                    player_hp -= ai_str - player_str;
                    global.roundwin = 2; // player = 1 ; ai = 2
                }
                else{
                    global.roundwin = 1; // player = 1 ; ai = 2
                }
            }
            else if(player_s == "water"){
                if(ai_str &gt; player_str){
                    player_hp -= ai_str - player_str;
                    global.roundwin = 2; // player = 1 ; ai = 2
                }
                else{
                    global.roundwin = 1; // player = 1 ; ai = 2
                }
            }
            else if(player_s == "light"){
                // nothing
                global.roundwin = 1; // player = 1 ; ai = 2
            }
            else if(player_s == "fire"){
                // nothing
                global.roundwin = 1; // player = 1 ; ai = 2
            }
        }
    }
    else if(player_t == "skip" and ai_t == "atk"){
        player_hp -= ai_str;
        global.roundwin = 2; // player = 1 ; ai = 2
    }
    else if(player_t == "atk" and ai_t == "skip"){
        ai_hp -= player_str;
        global.roundwin = 1; // player = 1 ; ai = 2
    }
    else if(player_t == "skip" and ai_t=="skip"){
        player_hp -= 2;
        ai_hp -= 2;
        global.roundwin = 0; // player = 1 ; ai = 2
    }
    else{
        // do nothing
        global.roundwin = 0; // player = 1 ; ai = 2
    }
    global.wait = 0;
    alarm[0] = room_speed*2;
}

if(player_hp &lt;= 0){
    global.win = 2; // AI wins
    global.winning = 2;
}
if(ai_hp &lt;= 0){
    global.win = 1; // Player wins
    global.winning = 1;
}
//show_debug_message(string(global.roundwin) + " | " + string(global.wait));

show_debug_message("!!!!!!!!!!!!!!!!!!  " + string(global.rounds));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
